from typing import List
from datetime import datetime as dt

spb_metro = {
    "–ö—Ä–∞—Å–Ω–∞—è": [
        "–î–µ–≤—è—Ç–∫–∏–Ω–æ", "–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç", "–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è",
        "–ü–æ–ª–∏—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è", "–ü–ª–æ—â–∞–¥—å –ú—É–∂–µ—Å—Ç–≤–∞", "–õ–µ—Å–Ω–∞—è", "–í—ã–±–æ—Ä–≥—Å–∫–∞—è",
        "–ü–ª–æ—â–∞–¥—å –õ–µ–Ω–∏–Ω–∞", "–ß–µ—Ä–Ω—ã—à–µ–≤—Å–∫–∞—è", "–ü–ª–æ—â–∞–¥—å –í–æ—Å—Å—Ç–∞–Ω–∏—è", "–í–ª–∞–¥–∏–º–∏—Ä—Å–∫–∞—è",
        "–ü—É—à–∫–∏–Ω—Å–∫–∞—è", "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç", "–ë–∞–ª—Ç–∏–π—Å–∫–∞—è", "–ù–∞—Ä–≤—Å–∫–∞—è",
        "–ö–∏—Ä–æ–≤—Å–∫–∏–π –∑–∞–≤–æ–¥", "–ê–≤—Ç–æ–≤–æ", "–õ–µ–Ω–∏–Ω—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç", "–ü—Ä–æ—Å–ø–µ–∫—Ç –í–µ—Ç–µ—Ä–∞–Ω–æ–≤"
    ],

    "–°–∏–Ω—è—è": [
        "–ü–∞—Ä–Ω–∞—Å", "–ü—Ä–æ—Å–ø–µ–∫—Ç –ü—Ä–æ—Å–≤–µ—â–µ–Ω–∏—è", "–û–∑–µ—Ä–∫–∏", "–£–¥–µ–ª—å–Ω–∞—è", "–ü–∏–æ–Ω–µ—Ä—Å–∫–∞—è",
        "–ß—ë—Ä–Ω–∞—è —Ä–µ—á–∫–∞", "–ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–∞—è", "–ì–æ—Ä—å–∫–æ–≤—Å–∫–∞—è", "–ù–µ–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç",
        "–°–µ–Ω–Ω–∞—è –ø–ª–æ—â–∞–¥—å", "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∞—è",
        "–ú–æ—Å–∫–æ–≤—Å–∫–∏–µ –≤–æ—Ä–æ—Ç–∞", "–≠–ª–µ–∫—Ç—Ä–æ—Å–∏–ª–∞", "–ü–∞—Ä–∫ –ü–æ–±–µ–¥—ã", "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è",
        "–ó–≤—ë–∑–¥–Ω–∞—è", "–ö—É–ø—á–∏–Ω–æ"
    ],

    "–ó–µ–ª—ë–Ω–∞—è": [
        "–ü—Ä–∏–º–æ—Ä—Å–∫–∞—è", "–í–∞—Å–∏–ª–µ–æ—Å—Ç—Ä–æ–≤—Å–∫–∞—è", "–ì–æ—Å—Ç–∏–Ω—ã–π –¥–≤–æ—Ä", "–ú–∞—è–∫–æ–≤—Å–∫–∞—è",
        "–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ", "–ï–ª–∏–∑–∞—Ä–æ–≤—Å–∫–∞—è", "–õ–æ–º–æ–Ω–æ—Å–æ–≤—Å–∫–∞—è",
        "–ü—Ä–æ–ª–µ—Ç–∞—Ä—Å–∫–∞—è", "–û–±—É—Ö–æ–≤–æ", "–†—ã–±–∞—Ü–∫–æ–µ"
    ],

    "–û—Ä–∞–Ω–∂–µ–≤–∞—è": [
        "–°–ø–∞—Å—Å–∫–∞—è", "–î–æ—Å—Ç–æ–µ–≤—Å–∫–∞—è", "–õ–∏–≥–æ–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç",
        "–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ", "–ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫–∞—è",
        "–õ–∞–¥–æ–∂—Å–∫–∞—è", "–ü—Ä–æ—Å–ø–µ–∫—Ç –ë–æ–ª—å—à–µ–≤–∏–∫–æ–≤", "–£–ª–∏—Ü–∞ –î—ã–±–µ–Ω–∫–æ"
    ],

    "–§–∏–æ–ª–µ—Ç–æ–≤–∞—è": [
        "–ö–æ–º–µ–Ω–¥–∞–Ω—Ç—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç", "–°—Ç–∞—Ä–∞—è –î–µ—Ä–µ–≤–Ω—è", "–ö—Ä–µ—Å—Ç–æ–≤—Å–∫–∏–π –æ—Å—Ç—Ä–æ–≤",
        "–ß–∫–∞–ª–æ–≤—Å–∫–∞—è", "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è", "–ê–¥–º–∏—Ä–∞–ª—Ç–µ–π—Å–∫–∞—è", "–°–∞–¥–æ–≤–∞—è",
        "–ó–≤–µ–Ω–∏–≥–æ—Ä–æ–¥—Å–∫–∞—è", "–û–±–≤–æ–¥–Ω—ã–π –∫–∞–Ω–∞–ª", "–í–æ–ª–∫–æ–≤—Å–∫–∞—è", "–ë—É—Ö–∞—Ä–µ—Å—Ç—Å–∫–∞—è",
        "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è", "–ü—Ä–æ—Å–ø–µ–∫—Ç –°–ª–∞–≤—ã", "–î—É–Ω–∞–π—Å–∫–∞—è", "–®—É—à–∞—Ä—ã"
    ]
}

emodji = {
    "–ö—Ä–∞—Å–Ω–∞—è": "üî¥",
    "–°–∏–Ω—è—è": "üîµ",
    "–ó–µ–ª—ë–Ω–∞—è": "üü¢",
    "–û—Ä–∞–Ω–∂–µ–≤–∞—è": "üü†",
    "–§–∏–æ–ª–µ—Ç–æ–≤–∞—è": "üü£"
}


def get_station_emoji(station_name: str) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ —Ü–≤–µ—Ç–∞ –≤–µ—Ç–∫–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Å—Ç–∞–Ω—Ü–∏–∏.
    """
    for line_color, stations in spb_metro.items():
        if station_name in stations:
            return emodji.get(line_color, '‚ö™Ô∏è')

    return 'üöÉ'


def format_update_time(last_update) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    months = [
        '—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è',
        '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'
    ]

    time = dt.strptime(str(last_update).split('.')[0], '%Y-%m-%d %H:%M:%S')

    return '{} {} {} {:02d}:{:02d}'.format(
        time.day, months[time.month], time.year, time.hour, time.minute
    )


async def prettify_info(data: List[dict]):
    """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    answer = ''
    for d in data:
        #maps_url = 'https://yandex.ru/maps/-/CHgsnI~0'
        color = get_station_emoji(d['pharm_subway'])
        time = format_update_time(d['last_update'])
        result = (
            f'\n<b>{d['pharm_name']}</b>, {d['pharm_loc']}\n'
            f'–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –ª—å–≥–æ—Ç–∞ ‚Äî {d['regional']} —à—Ç.\n'
            f'<i>–î–∞–Ω–Ω—ã–µ –æ—Ç {time}</i>\n'
            f'<blockquote>{d['pharm_district']} —Ä–∞–π–æ–Ω,'
            f'{color} {d['pharm_subway']}</blockquote>\n'
        )
        answer += result

    return answer
